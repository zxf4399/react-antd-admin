{"version":3,"file":"main.e461f573a59266ccef76.js","mappings":"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","sources":["webpack://react-antd-admin/./src/routes.tsx","webpack://react-antd-admin/./src/components/layout/Basic/index.tsx","webpack://react-antd-admin/./src/store.ts","webpack://react-antd-admin/./src/index.tsx","webpack://react-antd-admin/./src/App.tsx","webpack://react-antd-admin/./src/pages/counter/slice.ts"],"sourcesContent":["import React from \"react\";\n\nconst Index = React.lazy(() => import(\"@/pages/index\"));\nconst Counter = React.lazy(() => import(\"@/pages/counter\"));\nconst CssAspectRatio = React.lazy(() => import(\"@/pages/css/aspect-ratio\"));\nconst AwesomeMacOS = React.lazy(() => import(\"@/pages/awesome/macOS\"));\n\ninterface Route {\n  children?: Route[];\n  element?: React.ReactNode;\n  name: string;\n  path: string;\n}\n\nexport type Routes = Route[];\n\nconst routes: Routes = [\n  {\n    element: <Index />,\n    name: \"首页\",\n    path: \"/\",\n  },\n  {\n    element: <Counter />,\n    name: \"计数器\",\n    path: \"/counter\",\n  },\n  {\n    children: [\n      {\n        element: <CssAspectRatio />,\n        name: \"长宽比\",\n        path: \"/aspect-ratio\",\n      },\n    ],\n    name: \"CSS\",\n    path: \"/css\",\n  },\n  {\n    children: [\n      {\n        element: <AwesomeMacOS />,\n        name: \"macOS\",\n        path: \"/macOS\",\n      },\n    ],\n    name: \"Awesome\",\n    path: \"/awesome\",\n  },\n];\n\nexport const getFlattenRoutes = (routes: Routes, parentPath = \"\") => {\n  let flattenRoutes: Routes = [];\n\n  for (let i = 0; i < routes.length; i++) {\n    const currentPath = `${parentPath}${routes[i].path}`;\n\n    if (routes[i].children) {\n      flattenRoutes = flattenRoutes.concat(\n        getFlattenRoutes(routes[i].children as Routes, currentPath)\n      );\n    } else {\n      flattenRoutes.push({ ...routes[i], path: currentPath });\n    }\n  }\n\n  return flattenRoutes;\n};\n\nexport default routes;\n","import routes, { Routes } from \"@/routes\";\nimport { MenuFoldOutlined, MenuUnfoldOutlined } from \"@ant-design/icons\";\nimport { css } from \"@emotion/react\";\nimport { useMemoizedFn, useSetState } from \"ahooks\";\nimport { Layout, Menu } from \"antd\";\nimport React, { memo } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst { Content, Header, Sider } = Layout;\n\nconst BasicLayout: React.FC = ({ children }) => {\n  const location = useLocation();\n\n  const [state, setState] = useSetState({\n    collapsed: false,\n  });\n\n  const toggleCollapsed = useMemoizedFn(() => {\n    setState((prevState) => ({ collapsed: !prevState.collapsed }));\n  });\n\n  const renderMenuItems = useMemoizedFn((routes: Routes, parentPath = \"\") => {\n    return routes.map((route) => {\n      const currentPath = `${parentPath}${route.path}`;\n\n      if (route.children) {\n        return (\n          <Menu.SubMenu key={currentPath} title={route.name}>\n            {renderMenuItems(route.children, currentPath)}\n          </Menu.SubMenu>\n        );\n      } else {\n        return (\n          <Menu.Item key={currentPath}>\n            <Link to={currentPath}>{route.name}</Link>\n          </Menu.Item>\n        );\n      }\n    });\n  });\n\n  return (\n    <Layout\n      css={css`\n        height: 100%;\n      `}\n    >\n      <Sider collapsed={state.collapsed} collapsible trigger={null}>\n        <div\n          css={css`\n            height: 32px;\n            line-height: 32px;\n            margin: 16px 24px;\n            color: #fff;\n          `}\n        >\n          技术栈\n        </div>\n        <Menu\n          defaultSelectedKeys={[location.pathname]}\n          mode=\"inline\"\n          theme=\"dark\"\n        >\n          {renderMenuItems(routes)}\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header>\n          {state.collapsed ? (\n            <MenuUnfoldOutlined onClick={toggleCollapsed} />\n          ) : (\n            <MenuFoldOutlined onClick={toggleCollapsed} />\n          )}\n        </Header>\n        <Content\n          css={css`\n            padding: 24px;\n          `}\n        >\n          {children}\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default memo<React.FC>(BasicLayout);\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterSlice from \"@/pages/counter/slice\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"@/styles/base.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import { BasicLayout } from \"@/components/layout\";\nimport { Spin } from \"antd\";\nimport { Suspense, useMemo } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter, Route, Routes } from \"react-router-dom\";\nimport routes, { getFlattenRoutes } from \"./routes\";\nimport { store } from \"./store\";\n\nconst App = () => {\n  const memoizedRoutes = useMemo(() => getFlattenRoutes(routes), []);\n\n  return (\n    <Provider store={store}>\n      <HashRouter>\n        <BasicLayout>\n          <Routes>\n            {memoizedRoutes.map((route) => (\n              <Route\n                element={\n                  <Suspense fallback={<Spin />}>{route.element}</Suspense>\n                }\n                key={route.path}\n                path={route.path}\n              />\n            ))}\n          </Routes>\n        </BasicLayout>\n      </HashRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface CounterState {\n  value: number;\n}\n\nconst initialState: CounterState = {\n  value: 0,\n};\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n  },\n});\n\nexport default counterSlice;\n"],"names":["Index","React","Counter","CssAspectRatio","AwesomeMacOS","routes","element","name","path","children","getFlattenRoutes","parentPath","flattenRoutes","i","length","currentPath","concat","push","Content","Header","Sider","BasicLayout","location","useLocation","state","setState","useSetState","collapsed","toggleCollapsed","useMemoizedFn","prevState","renderMenuItems","map","route","title","to","css","collapsible","trigger","defaultSelectedKeys","pathname","mode","theme","MenuUnfoldOutlined","onClick","MenuFoldOutlined","memo","store","configureStore","reducer","counter","counterSlice","ReactDOM","memoizedRoutes","useMemo","Basic","Suspense","fallback","document","getElementById","createSlice","initialState","value","reducers","increment","decrement"],"sourceRoot":""}