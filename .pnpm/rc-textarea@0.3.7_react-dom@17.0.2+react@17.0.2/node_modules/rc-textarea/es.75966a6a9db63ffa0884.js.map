{"version":3,"file":".pnpm/rc-textarea@0.3.7_react-dom@17.0.2+react@17.0.2/node_modules/rc-textarea/es.75966a6a9db63ffa0884.js","mappings":"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","sources":["webpack://react-antd-admin/./node_modules/.pnpm/rc-textarea@0.3.7_react-dom@17.0.2+react@17.0.2/node_modules/rc-textarea/es/calculateNodeHeight.js","webpack://react-antd-admin/./node_modules/.pnpm/rc-textarea@0.3.7_react-dom@17.0.2+react@17.0.2/node_modules/rc-textarea/es/ResizableTextArea.js","webpack://react-antd-admin/./node_modules/.pnpm/rc-textarea@0.3.7_react-dom@17.0.2+react@17.0.2/node_modules/rc-textarea/es/index.js"],"sourcesContent":["// Thanks to https://github.com/andreypopp/react-textarea-autosize/\n\n/**\n * calculateNodeHeight(uiTextNode, useCache = false)\n */\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n\";\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'padding-top', 'padding-bottom', 'font-family', 'font-weight', 'font-size', 'font-variant', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-left', 'padding-right', 'border-width', 'box-sizing', 'word-break'];\nvar computedStyleCache = {};\nvar hiddenTextarea;\nexport function calculateNodeStyling(node) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var nodeRef = node.getAttribute('id') || node.getAttribute('data-reactid') || node.getAttribute('name');\n\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n\n  var style = window.getComputedStyle(node);\n  var boxSizing = style.getPropertyValue('box-sizing') || style.getPropertyValue('-moz-box-sizing') || style.getPropertyValue('-webkit-box-sizing');\n  var paddingSize = parseFloat(style.getPropertyValue('padding-bottom')) + parseFloat(style.getPropertyValue('padding-top'));\n  var borderSize = parseFloat(style.getPropertyValue('border-bottom-width')) + parseFloat(style.getPropertyValue('border-top-width'));\n  var sizingStyle = SIZING_STYLE.map(function (name) {\n    return \"\".concat(name, \":\").concat(style.getPropertyValue(name));\n  }).join(';');\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\nexport default function calculateNodeHeight(uiTextNode) {\n  var useCache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var minRows = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var maxRows = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    hiddenTextarea.setAttribute('tab-index', '-1');\n    hiddenTextarea.setAttribute('aria-hidden', 'true');\n    document.body.appendChild(hiddenTextarea);\n  } // Fix wrap=\"off\" issue\n  // https://github.com/ant-design/ant-design/issues/6577\n\n\n  if (uiTextNode.getAttribute('wrap')) {\n    hiddenTextarea.setAttribute('wrap', uiTextNode.getAttribute('wrap'));\n  } else {\n    hiddenTextarea.removeAttribute('wrap');\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache),\n      paddingSize = _calculateNodeStyling.paddingSize,\n      borderSize = _calculateNodeStyling.borderSize,\n      boxSizing = _calculateNodeStyling.boxSizing,\n      sizingStyle = _calculateNodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n\n  hiddenTextarea.setAttribute('style', \"\".concat(sizingStyle, \";\").concat(HIDDEN_TEXTAREA_STYLE));\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || '';\n  var minHeight = Number.MIN_SAFE_INTEGER;\n  var maxHeight = Number.MAX_SAFE_INTEGER;\n  var height = hiddenTextarea.scrollHeight;\n  var overflowY;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height += borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height -= paddingSize;\n  }\n\n  if (minRows !== null || maxRows !== null) {\n    // measure height of a textarea with a single row\n    hiddenTextarea.value = ' ';\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n\n      if (boxSizing === 'border-box') {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n\n      height = Math.max(minHeight, height);\n    }\n\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n\n      if (boxSizing === 'border-box') {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n\n      overflowY = height > maxHeight ? '' : 'hidden';\n      height = Math.min(maxHeight, height);\n    }\n  }\n\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    overflowY: overflowY,\n    resize: 'none'\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from \"rc-util/es/omit\";\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport shallowEqual from 'shallowequal'; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nvar RESIZE_STATUS;\n\n(function (RESIZE_STATUS) {\n  RESIZE_STATUS[RESIZE_STATUS[\"NONE\"] = 0] = \"NONE\";\n  RESIZE_STATUS[RESIZE_STATUS[\"RESIZING\"] = 1] = \"RESIZING\";\n  RESIZE_STATUS[RESIZE_STATUS[\"RESIZED\"] = 2] = \"RESIZED\";\n})(RESIZE_STATUS || (RESIZE_STATUS = {}));\n\nvar ResizableTextArea = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResizableTextArea, _React$Component);\n\n  var _super = _createSuper(ResizableTextArea);\n\n  function ResizableTextArea(props) {\n    var _this;\n\n    _classCallCheck(this, ResizableTextArea);\n\n    _this = _super.call(this, props);\n    _this.nextFrameActionId = void 0;\n    _this.resizeFrameId = void 0;\n    _this.textArea = void 0;\n\n    _this.saveTextArea = function (textArea) {\n      _this.textArea = textArea;\n    };\n\n    _this.handleResize = function (size) {\n      var resizeStatus = _this.state.resizeStatus;\n      var _this$props = _this.props,\n          autoSize = _this$props.autoSize,\n          onResize = _this$props.onResize;\n\n      if (resizeStatus !== RESIZE_STATUS.NONE) {\n        return;\n      }\n\n      if (typeof onResize === 'function') {\n        onResize(size);\n      }\n\n      if (autoSize) {\n        _this.resizeOnNextFrame();\n      }\n    };\n\n    _this.resizeOnNextFrame = function () {\n      cancelAnimationFrame(_this.nextFrameActionId);\n      _this.nextFrameActionId = requestAnimationFrame(_this.resizeTextarea);\n    };\n\n    _this.resizeTextarea = function () {\n      var autoSize = _this.props.autoSize;\n\n      if (!autoSize || !_this.textArea) {\n        return;\n      }\n\n      var minRows = autoSize.minRows,\n          maxRows = autoSize.maxRows;\n      var textareaStyles = calculateNodeHeight(_this.textArea, false, minRows, maxRows);\n\n      _this.setState({\n        textareaStyles: textareaStyles,\n        resizeStatus: RESIZE_STATUS.RESIZING\n      }, function () {\n        cancelAnimationFrame(_this.resizeFrameId);\n        _this.resizeFrameId = requestAnimationFrame(function () {\n          _this.setState({\n            resizeStatus: RESIZE_STATUS.RESIZED\n          }, function () {\n            _this.resizeFrameId = requestAnimationFrame(function () {\n              _this.setState({\n                resizeStatus: RESIZE_STATUS.NONE\n              });\n\n              _this.fixFirefoxAutoScroll();\n            });\n          });\n        });\n      });\n    };\n\n    _this.renderTextArea = function () {\n      var _this$props2 = _this.props,\n          _this$props2$prefixCl = _this$props2.prefixCls,\n          prefixCls = _this$props2$prefixCl === void 0 ? 'rc-textarea' : _this$props2$prefixCl,\n          autoSize = _this$props2.autoSize,\n          onResize = _this$props2.onResize,\n          className = _this$props2.className,\n          disabled = _this$props2.disabled;\n      var _this$state = _this.state,\n          textareaStyles = _this$state.textareaStyles,\n          resizeStatus = _this$state.resizeStatus;\n      var otherProps = omit(_this.props, ['prefixCls', 'onPressEnter', 'autoSize', 'defaultValue', 'onResize']);\n      var cls = classNames(prefixCls, className, _defineProperty({}, \"\".concat(prefixCls, \"-disabled\"), disabled)); // Fix https://github.com/ant-design/ant-design/issues/6776\n      // Make sure it could be reset when using form.getFieldDecorator\n\n      if ('value' in otherProps) {\n        otherProps.value = otherProps.value || '';\n      }\n\n      var style = _objectSpread(_objectSpread(_objectSpread({}, _this.props.style), textareaStyles), resizeStatus === RESIZE_STATUS.RESIZING ? // React will warning when mix `overflow` & `overflowY`.\n      // We need to define this separately.\n      {\n        overflowX: 'hidden',\n        overflowY: 'hidden'\n      } : null);\n\n      return /*#__PURE__*/React.createElement(ResizeObserver, {\n        onResize: _this.handleResize,\n        disabled: !(autoSize || onResize)\n      }, /*#__PURE__*/React.createElement(\"textarea\", _extends({}, otherProps, {\n        className: cls,\n        style: style,\n        ref: _this.saveTextArea\n      })));\n    };\n\n    _this.state = {\n      textareaStyles: {},\n      resizeStatus: RESIZE_STATUS.NONE\n    };\n    return _this;\n  }\n\n  _createClass(ResizableTextArea, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Re-render with the new content or new autoSize property then recalculate the height as required.\n      if (prevProps.value !== this.props.value || !shallowEqual(prevProps.autoSize, this.props.autoSize)) {\n        this.resizeTextarea();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      cancelAnimationFrame(this.nextFrameActionId);\n      cancelAnimationFrame(this.resizeFrameId);\n    } // https://github.com/ant-design/ant-design/issues/21870\n\n  }, {\n    key: \"fixFirefoxAutoScroll\",\n    value: function fixFirefoxAutoScroll() {\n      try {\n        if (document.activeElement === this.textArea) {\n          var currentStart = this.textArea.selectionStart;\n          var currentEnd = this.textArea.selectionEnd;\n          this.textArea.setSelectionRange(currentStart, currentEnd);\n        }\n      } catch (e) {// Fix error in Chrome:\n        // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n        // http://stackoverflow.com/q/21177489/3040605\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderTextArea();\n    }\n  }]);\n\n  return ResizableTextArea;\n}(React.Component);\n\nexport default ResizableTextArea;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport ResizableTextArea from './ResizableTextArea';\n\nvar TextArea = /*#__PURE__*/function (_React$Component) {\n  _inherits(TextArea, _React$Component);\n\n  var _super = _createSuper(TextArea);\n\n  function TextArea(props) {\n    var _this;\n\n    _classCallCheck(this, TextArea);\n\n    _this = _super.call(this, props);\n    _this.resizableTextArea = void 0;\n\n    _this.focus = function () {\n      _this.resizableTextArea.textArea.focus();\n    };\n\n    _this.saveTextArea = function (resizableTextArea) {\n      _this.resizableTextArea = resizableTextArea;\n    };\n\n    _this.handleChange = function (e) {\n      var onChange = _this.props.onChange;\n\n      _this.setValue(e.target.value, function () {\n        _this.resizableTextArea.resizeTextarea();\n      });\n\n      if (onChange) {\n        onChange(e);\n      }\n    };\n\n    _this.handleKeyDown = function (e) {\n      var _this$props = _this.props,\n          onPressEnter = _this$props.onPressEnter,\n          onKeyDown = _this$props.onKeyDown;\n\n      if (e.keyCode === 13 && onPressEnter) {\n        onPressEnter(e);\n      }\n\n      if (onKeyDown) {\n        onKeyDown(e);\n      }\n    };\n\n    var value = typeof props.value === 'undefined' || props.value === null ? props.defaultValue : props.value;\n    _this.state = {\n      value: value\n    };\n    return _this;\n  }\n\n  _createClass(TextArea, [{\n    key: \"setValue\",\n    value: function setValue(value, callback) {\n      if (!('value' in this.props)) {\n        this.setState({\n          value: value\n        }, callback);\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.resizableTextArea.textArea.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ResizableTextArea, _extends({}, this.props, {\n        value: this.state.value,\n        onKeyDown: this.handleKeyDown,\n        onChange: this.handleChange,\n        ref: this.saveTextArea\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if ('value' in nextProps) {\n        return {\n          value: nextProps.value\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return TextArea;\n}(React.Component);\n\nexport { ResizableTextArea };\nexport default TextArea;"],"names":["hiddenTextarea","HIDDEN_TEXTAREA_STYLE","SIZING_STYLE","computedStyleCache","calculateNodeStyling","node","useCache","arguments","length","undefined","nodeRef","getAttribute","style","window","getComputedStyle","boxSizing","getPropertyValue","paddingSize","parseFloat","borderSize","sizingStyle","map","name","concat","join","nodeInfo","RESIZE_STATUS","ResizableTextArea","_React$Component","_super","props","_this","this","call","nextFrameActionId","resizeFrameId","textArea","saveTextArea","handleResize","size","resizeStatus","state","_this$props","autoSize","onResize","NONE","resizeOnNextFrame","cancelAnimationFrame","requestAnimationFrame","resizeTextarea","minRows","maxRows","textareaStyles","uiTextNode","document","createElement","setAttribute","body","appendChild","removeAttribute","_calculateNodeStyling","value","placeholder","overflowY","minHeight","Number","MIN_SAFE_INTEGER","maxHeight","MAX_SAFE_INTEGER","height","scrollHeight","singleRowHeight","Math","max","min","resize","calculateNodeHeight","setState","RESIZING","RESIZED","fixFirefoxAutoScroll","renderTextArea","_this$props2","_this$props2$prefixCl","prefixCls","className","disabled","_this$state","otherProps","omit","cls","overflowX","ref","key","prevProps","activeElement","currentStart","selectionStart","currentEnd","selectionEnd","setSelectionRange","e","TextArea","resizableTextArea","focus","handleChange","onChange","setValue","target","handleKeyDown","onPressEnter","onKeyDown","keyCode","defaultValue","callback","blur","nextProps"],"sourceRoot":""}