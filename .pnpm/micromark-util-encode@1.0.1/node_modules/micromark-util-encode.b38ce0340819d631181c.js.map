{"version":3,"file":".pnpm/micromark-util-encode@1.0.1/node_modules/micromark-util-encode.b38ce0340819d631181c.js","mappings":"8IAAA,MAAMA,EAAsB,CAAC,IAAK,OAAQ,IAAK,MAAO,IAAK,KAAM,IAAK,MAY/D,SAASC,EAAOC,GACrB,OAAOA,EAAMC,QAAQ,WAMrB,SAAiBD,GAEf,MAAO,IAAMF,EAAoBE,GAAS","sources":["webpack://tech-stack/./node_modules/.pnpm/micromark-util-encode@1.0.1/node_modules/micromark-util-encode/index.js"],"sourcesContent":["const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, itâ€™s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n"],"names":["characterReferences","encode","value","replace"],"sourceRoot":""}