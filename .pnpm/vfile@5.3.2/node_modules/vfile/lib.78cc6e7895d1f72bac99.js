"use strict";(self.webpackChunkreact_antd_admin=self.webpackChunkreact_antd_admin||[]).push([[2277],{6377:function(t,e,n){n.d(e,{k:function(){return m}});var r=n(9965),i=n(486);const s=function(t,e){if(void 0!==e&&"string"!=typeof e)throw new TypeError('"ext" argument must be a string');f(t);let n,r=0,i=-1,s=t.length;if(void 0===e||0===e.length||e.length>t.length){for(;s--;)if(47===t.charCodeAt(s)){if(n){r=s+1;break}}else i<0&&(n=!0,i=s+1);return i<0?"":t.slice(r,i)}if(e===t)return"";let h=-1,o=e.length-1;for(;s--;)if(47===t.charCodeAt(s)){if(n){r=s+1;break}}else h<0&&(n=!0,h=s+1),o>-1&&(t.charCodeAt(s)===e.charCodeAt(o--)?o<0&&(i=s):(o=-1,i=h));return r===i?i=h:i<0&&(i=t.length),t.slice(r,i)},h=function(t){if(f(t),0===t.length)return".";let e,n=-1,r=t.length;for(;--r;)if(47===t.charCodeAt(r)){if(e){n=r;break}}else e||(e=!0);return n<0?47===t.charCodeAt(0)?"/":".":1===n&&47===t.charCodeAt(0)?"//":t.slice(0,n)},o=function(t){f(t);let e,n=t.length,r=-1,i=0,s=-1,h=0;for(;n--;){const o=t.charCodeAt(n);if(47!==o)r<0&&(e=!0,r=n+1),46===o?s<0?s=n:1!==h&&(h=1):s>-1&&(h=-1);else if(e){i=n+1;break}}return s<0||r<0||0===h||1===h&&s===r-1&&s===i+1?"":t.slice(s,r)},a=function(...t){let e,n=-1;for(;++n<t.length;)f(t[n]),t[n]&&(e=void 0===e?t[n]:e+"/"+t[n]);return void 0===e?".":function(t){f(t);const e=47===t.charCodeAt(0);let n=function(t,e){let n,r,i="",s=0,h=-1,o=0,a=-1;for(;++a<=t.length;){if(a<t.length)n=t.charCodeAt(a);else{if(47===n)break;n=47}if(47===n){if(h===a-1||1===o);else if(h!==a-1&&2===o){if(i.length<2||2!==s||46!==i.charCodeAt(i.length-1)||46!==i.charCodeAt(i.length-2))if(i.length>2){if(r=i.lastIndexOf("/"),r!==i.length-1){r<0?(i="",s=0):(i=i.slice(0,r),s=i.length-1-i.lastIndexOf("/")),h=a,o=0;continue}}else if(i.length>0){i="",s=0,h=a,o=0;continue}e&&(i=i.length>0?i+"/..":"..",s=2)}else i.length>0?i+="/"+t.slice(h+1,a):i=t.slice(h+1,a),s=a-h-1;h=a,o=0}else 46===n&&o>-1?o++:o=-1}return i}(t,!e);return 0!==n.length||e||(n="."),n.length>0&&47===t.charCodeAt(t.length-1)&&(n+="/"),e?"/"+n:n}(e)},c="/";function f(t){if("string"!=typeof t)throw new TypeError("Path must be a string. Received "+JSON.stringify(t))}const l=function(){return"/"};function u(t){return null!==t&&"object"==typeof t&&t.href&&t.origin}const d=["history","path","basename","stem","extname","dirname"];class m{constructor(t){let e;e=t?"string"==typeof t||r(t)?{value:t}:u(t)?{path:t}:t:{},this.data={},this.messages=[],this.history=[],this.cwd=l(),this.value,this.stored,this.result,this.map;let n,i=-1;for(;++i<d.length;){const t=d[i];t in e&&void 0!==e[t]&&(this[t]="history"===t?[...e[t]]:e[t])}for(n in e)d.includes(n)||(this[n]=e[n])}get path(){return this.history[this.history.length-1]}set path(t){u(t)&&(t=function(t){if("string"==typeof t)t=new URL(t);else if(!u(t)){const e=new TypeError('The "path" argument must be of type string or an instance of URL. Received `'+t+"`");throw e.code="ERR_INVALID_ARG_TYPE",e}if("file:"!==t.protocol){const t=new TypeError("The URL must be of scheme file");throw t.code="ERR_INVALID_URL_SCHEME",t}return function(t){if(""!==t.hostname){const t=new TypeError('File URL host must be "localhost" or empty on darwin');throw t.code="ERR_INVALID_FILE_URL_HOST",t}const e=t.pathname;let n=-1;for(;++n<e.length;)if(37===e.charCodeAt(n)&&50===e.charCodeAt(n+1)){const t=e.charCodeAt(n+2);if(70===t||102===t){const t=new TypeError("File URL path must not include encoded / characters");throw t.code="ERR_INVALID_FILE_URL_PATH",t}}return decodeURIComponent(e)}(t)}(t)),p(t,"path"),this.path!==t&&this.history.push(t)}get dirname(){return"string"==typeof this.path?h(this.path):void 0}set dirname(t){w(this.basename,"dirname"),this.path=a(t||"",this.basename)}get basename(){return"string"==typeof this.path?s(this.path):void 0}set basename(t){p(t,"basename"),g(t,"basename"),this.path=a(this.dirname||"",t)}get extname(){return"string"==typeof this.path?o(this.path):void 0}set extname(t){if(g(t,"extname"),w(this.dirname,"extname"),t){if(46!==t.charCodeAt(0))throw new Error("`extname` must start with `.`");if(t.includes(".",1))throw new Error("`extname` cannot contain multiple dots")}this.path=a(this.dirname,this.stem+(t||""))}get stem(){return"string"==typeof this.path?s(this.path,this.extname):void 0}set stem(t){p(t,"stem"),g(t,"stem"),this.path=a(this.dirname||"",t+(this.extname||""))}toString(t){return(this.value||"").toString(t)}message(t,e,n){const r=new i.$(t,e,n);return this.path&&(r.name=this.path+":"+r.name,r.file=this.path),r.fatal=!1,this.messages.push(r),r}info(t,e,n){const r=this.message(t,e,n);return r.fatal=null,r}fail(t,e,n){const r=this.message(t,e,n);throw r.fatal=!0,r}}function g(t,e){if(t&&t.includes(c))throw new Error("`"+e+"` cannot be a path: did not expect `"+c+"`")}function p(t,e){if(!t)throw new Error("`"+e+"` cannot be empty")}function w(t,e){if(!t)throw new Error("Setting `"+e+"` requires `path` to be set too")}}}]);
//# sourceMappingURL=lib.78cc6e7895d1f72bac99.js.map