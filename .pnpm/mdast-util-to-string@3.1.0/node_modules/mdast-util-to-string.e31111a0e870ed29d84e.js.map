{"version":3,"file":".pnpm/mdast-util-to-string@3.1.0/node_modules/mdast-util-to-string.e31111a0e870ed29d84e.js","mappings":"8GAcO,SAASA,EAASC,EAAMC,GAC7B,IAAI,gBAACC,GAAkB,GAAQD,GAAW,GAC1C,OAAOE,EAAIH,EAAME,GAQnB,SAASC,EAAIH,EAAME,GACjB,OACGF,GACiB,iBAATA,IAENA,EAAKI,QAEHF,EAAkBF,EAAKK,IAAM,KAE7B,aAAcL,GAAQM,EAAIN,EAAKO,SAAUL,IACzCM,MAAMC,QAAQT,IAASM,EAAIN,EAAME,KACtC,GASJ,SAASI,EAAII,EAAQR,GAKnB,IAHA,IAAIS,EAAS,GACTC,GAAS,IAEJA,EAAQF,EAAOG,QACtBF,EAAOC,GAAST,EAAIO,EAAOE,GAAQV,GAGrC,OAAOS,EAAOG,KAAK,I","sources":["webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-string@3.1.0/node_modules/mdast-util-to-string/index.js"],"sourcesContent":["/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the nodeâ€™s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n"],"names":["toString","node","options","includeImageAlt","one","value","alt","all","children","Array","isArray","values","result","index","length","join"],"sourceRoot":""}