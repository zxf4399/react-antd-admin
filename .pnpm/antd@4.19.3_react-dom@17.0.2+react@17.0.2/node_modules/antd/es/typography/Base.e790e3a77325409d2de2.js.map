{"version":3,"file":".pnpm/antd@4.19.3_react-dom@17.0.2+react@17.0.2/node_modules/antd/es/typography/Base.e790e3a77325409d2de2.js","mappings":"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","sources":["webpack://react-antd-admin/./node_modules/.pnpm/antd@4.19.3_react-dom@17.0.2+react@17.0.2/node_modules/antd/es/typography/Base/Ellipsis.js","webpack://react-antd-admin/./node_modules/.pnpm/antd@4.19.3_react-dom@17.0.2+react@17.0.2/node_modules/antd/es/typography/Base/EllipsisTooltip.js","webpack://react-antd-admin/./node_modules/.pnpm/antd@4.19.3_react-dom@17.0.2+react@17.0.2/node_modules/antd/es/typography/Base/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\n\nfunction cuttable(node) {\n  var type = _typeof(node);\n\n  return type === 'string' || type === 'number';\n}\n\nfunction getNodesLen(nodeList) {\n  var totalLen = 0;\n  nodeList.forEach(function (node) {\n    if (cuttable(node)) {\n      totalLen += String(node).length;\n    } else {\n      totalLen += 1;\n    }\n  });\n  return totalLen;\n}\n\nfunction sliceNodes(nodeList, len) {\n  var currLen = 0;\n  var currentNodeList = [];\n\n  for (var i = 0; i < nodeList.length; i += 1) {\n    // Match to return\n    if (currLen === len) {\n      return currentNodeList;\n    }\n\n    var node = nodeList[i];\n    var canCut = cuttable(node);\n    var nodeLen = canCut ? String(node).length : 1;\n    var nextLen = currLen + nodeLen; // Exceed but current not which means we need cut this\n    // This will not happen on validate ReactElement\n\n    if (nextLen > len) {\n      var restLen = len - currLen;\n      currentNodeList.push(String(node).slice(0, restLen));\n      return currentNodeList;\n    }\n\n    currentNodeList.push(node);\n    currLen = nextLen;\n  }\n\n  return nodeList;\n}\n\nvar NONE = 0;\nvar PREPARE = 1;\nvar WALKING = 2;\nvar DONE_WITH_ELLIPSIS = 3;\nvar DONE_WITHOUT_ELLIPSIS = 4;\n\nvar Ellipsis = function Ellipsis(_ref) {\n  var enabledMeasure = _ref.enabledMeasure,\n      children = _ref.children,\n      text = _ref.text,\n      width = _ref.width,\n      rows = _ref.rows,\n      onEllipsis = _ref.onEllipsis;\n\n  var _React$useState = React.useState([0, 0, 0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      cutLength = _React$useState2[0],\n      setCutLength = _React$useState2[1];\n\n  var _React$useState3 = React.useState(NONE),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      walkingState = _React$useState4[0],\n      setWalkingState = _React$useState4[1];\n\n  var _cutLength = _slicedToArray(cutLength, 3),\n      startLen = _cutLength[0],\n      midLen = _cutLength[1],\n      endLen = _cutLength[2];\n\n  var _React$useState5 = React.useState(0),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      singleRowHeight = _React$useState6[0],\n      setSingleRowHeight = _React$useState6[1];\n\n  var singleRowRef = React.useRef(null);\n  var midRowRef = React.useRef(null);\n  var nodeList = React.useMemo(function () {\n    return toArray(text);\n  }, [text]);\n  var totalLen = React.useMemo(function () {\n    return getNodesLen(nodeList);\n  }, [nodeList]);\n  var mergedChildren = React.useMemo(function () {\n    if (!enabledMeasure || walkingState !== DONE_WITH_ELLIPSIS) {\n      return children(nodeList, false);\n    }\n\n    return children(sliceNodes(nodeList, midLen), midLen < totalLen);\n  }, [enabledMeasure, walkingState, children, nodeList, midLen, totalLen]); // ======================== Walk ========================\n\n  useIsomorphicLayoutEffect(function () {\n    if (enabledMeasure && width && totalLen) {\n      setWalkingState(PREPARE);\n      setCutLength([0, Math.ceil(totalLen / 2), totalLen]);\n    }\n  }, [enabledMeasure, width, text, totalLen, rows]);\n  useIsomorphicLayoutEffect(function () {\n    var _a;\n\n    if (walkingState === PREPARE) {\n      setSingleRowHeight(((_a = singleRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0);\n    }\n  }, [walkingState]);\n  useIsomorphicLayoutEffect(function () {\n    var _a, _b;\n\n    if (singleRowHeight) {\n      if (walkingState === PREPARE) {\n        // Ignore if position is enough\n        var midHeight = ((_a = midRowRef.current) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n        var maxHeight = rows * singleRowHeight;\n\n        if (midHeight <= maxHeight) {\n          setWalkingState(DONE_WITHOUT_ELLIPSIS);\n          onEllipsis(false);\n        } else {\n          setWalkingState(WALKING);\n        }\n      } else if (walkingState === WALKING) {\n        if (startLen !== endLen) {\n          var _midHeight = ((_b = midRowRef.current) === null || _b === void 0 ? void 0 : _b.offsetHeight) || 0;\n\n          var _maxHeight = rows * singleRowHeight;\n\n          var nextStartLen = startLen;\n          var nextEndLen = endLen; // We reach the last round\n\n          if (startLen === endLen - 1) {\n            nextEndLen = startLen;\n          } else if (_midHeight <= _maxHeight) {\n            nextStartLen = midLen;\n          } else {\n            nextEndLen = midLen;\n          }\n\n          var nextMidLen = Math.ceil((nextStartLen + nextEndLen) / 2);\n          setCutLength([nextStartLen, nextMidLen, nextEndLen]);\n        } else {\n          setWalkingState(DONE_WITH_ELLIPSIS);\n          onEllipsis(true);\n        }\n      }\n    }\n  }, [walkingState, startLen, endLen, rows, singleRowHeight]); // ======================= Render =======================\n\n  var measureStyle = {\n    width: width,\n    whiteSpace: 'normal',\n    margin: 0,\n    padding: 0\n  };\n\n  var renderMeasure = function renderMeasure(content, ref, style) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      ref: ref,\n      style: _extends({\n        position: 'fixed',\n        display: 'block',\n        left: 0,\n        top: 0,\n        zIndex: -9999,\n        visibility: 'hidden',\n        pointerEvents: 'none'\n      }, style)\n    }, content);\n  };\n\n  var renderMeasureSlice = function renderMeasureSlice(len, ref) {\n    var sliceNodeList = sliceNodes(nodeList, len);\n    return renderMeasure(children(sliceNodeList, true), ref, measureStyle);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, mergedChildren, enabledMeasure && walkingState !== DONE_WITH_ELLIPSIS && walkingState !== DONE_WITHOUT_ELLIPSIS && /*#__PURE__*/React.createElement(React.Fragment, null, renderMeasure('lg', singleRowRef, {\n    wordBreak: 'keep-all',\n    whiteSpace: 'nowrap'\n  }), walkingState === PREPARE ? renderMeasure(children(nodeList, false), midRowRef, measureStyle) : renderMeasureSlice(midLen, midRowRef)));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Ellipsis.displayName = 'Ellipsis';\n}\n\nexport default Ellipsis;","import * as React from 'react';\nimport Tooltip from '../../tooltip';\n\nvar EllipsisTooltip = function EllipsisTooltip(_ref) {\n  var title = _ref.title,\n      enabledEllipsis = _ref.enabledEllipsis,\n      isEllipsis = _ref.isEllipsis,\n      children = _ref.children;\n\n  if (!title || !enabledEllipsis) {\n    return children;\n  }\n\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: title,\n    visible: isEllipsis ? undefined : false\n  }, children);\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  EllipsisTooltip.displayName = 'EllipsisTooltip';\n}\n\nexport default EllipsisTooltip;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport copy from 'copy-to-clipboard';\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport ResizeObserver from 'rc-resize-observer';\nimport useIsomorphicLayoutEffect from \"rc-util/es/hooks/useLayoutEffect\";\nimport { ConfigContext } from '../../config-provider';\nimport { useLocaleReceiver } from '../../locale-provider/LocaleReceiver';\nimport TransButton from '../../_util/transButton';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport Tooltip from '../../tooltip';\nimport Typography from '../Typography';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard,\n      italic = _ref.italic;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  wrap(italic, 'i');\n  return currentContent;\n}\n\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n\nfunction toList(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      type = props.type,\n      disabled = props.disabled,\n      children = props.children,\n      ellipsis = props.ellipsis,\n      editable = props.editable,\n      copyable = props.copyable,\n      component = props.component,\n      title = props.title,\n      restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var textLocale = useLocaleReceiver('Text')[0]; // Force TS get this\n\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']); // ========================== Editable ==========================\n\n  var _useMergedConfig = useMergedConfig(editable),\n      _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n      enableEdit = _useMergedConfig2[0],\n      editConfig = _useMergedConfig2[1];\n\n  var _useMergedState = useMergedState(false, {\n    value: editConfig.editing\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      editing = _useMergedState2[0],\n      setEditing = _useMergedState2[1];\n\n  var _editConfig$triggerTy = editConfig.triggerType,\n      triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  useUpdatedEffect(function () {\n    var _a;\n\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  var onEditClick = function onEditClick(e) {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n\n  var onEditChange = function onEditChange(value) {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  var onEditCancel = function onEditCancel() {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  var _useMergedConfig3 = useMergedConfig(copyable),\n      _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n      enableCopy = _useMergedConfig4[0],\n      copyConfig = _useMergedConfig4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      copied = _React$useState2[0],\n      setCopied = _React$useState2[1];\n\n  var copyIdRef = React.useRef();\n\n  var cleanCopyId = function cleanCopyId() {\n    clearTimeout(copyIdRef.current);\n  };\n\n  var onCopyClick = function onCopyClick(e) {\n    var _a;\n\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    e === null || e === void 0 ? void 0 : e.stopPropagation();\n    copy(copyConfig.text || String(children) || '');\n    setCopied(true); // Trigger tips update\n\n    cleanCopyId();\n    copyIdRef.current = setTimeout(function () {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig);\n  };\n\n  React.useEffect(function () {\n    return cleanCopyId;\n  }, []); // ========================== Ellipsis ==========================\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLineClampSupport = _React$useState4[0],\n      setIsLineClampSupport = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isTextOverflowSupport = _React$useState6[0],\n      setIsTextOverflowSupport = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      expanded = _React$useState8[0],\n      setExpanded = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isJsEllipsis = _React$useState10[0],\n      setIsJsEllipsis = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      isNativeEllipsis = _React$useState12[0],\n      setIsNativeEllipsis = _React$useState12[1];\n\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n    expandable: false\n  }),\n      _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n      enableEllipsis = _useMergedConfig6[0],\n      ellipsisConfig = _useMergedConfig6[1];\n\n  var mergedEnableEllipsis = enableEllipsis && !expanded; // Shared prop to reduce bundle size\n\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n      rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (// Disable ellipsis\n      !mergedEnableEllipsis || // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  useIsomorphicLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  var cssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  var onExpandClick = function onExpandClick(e) {\n    var _a;\n\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      ellipsisWidth = _React$useState14[0],\n      setEllipsisWidth = _React$useState14[1];\n\n  var onResize = function onResize(_ref2) {\n    var offsetWidth = _ref2.offsetWidth;\n    setEllipsisWidth(offsetWidth);\n  }; // >>>>> JS Ellipsis\n\n\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = cssLineClamp ? textEle.offsetHeight < textEle.scrollHeight : textEle.offsetWidth < textEle.scrollWidth;\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp]); // ========================== Tooltip ===========================\n\n  var tooltipTitle = ellipsisConfig.tooltip === true ? children : ellipsisConfig.tooltip;\n  var topAriaLabel = React.useMemo(function () {\n    var isValid = function isValid(val) {\n      return ['string', 'number'].includes(_typeof(val));\n    };\n\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    if (isValid(children)) {\n      return children;\n    }\n\n    if (isValid(title)) {\n      return title;\n    }\n\n    if (isValid(tooltipTitle)) {\n      return tooltipTitle;\n    }\n\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipTitle, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n        symbol = ellipsisConfig.symbol;\n    if (!expandable) return null;\n    var expandContent;\n\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale.expand;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-expand\"),\n      onClick: onExpandClick,\n      \"aria-label\": textLocale.expand\n    }, expandContent);\n  }; // Edit\n\n\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) return;\n    var icon = editConfig.icon,\n        tooltip = editConfig.tooltip;\n    var editTitle = toArray(tooltip)[0] || textLocale.edit;\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) return;\n    var tooltips = copyConfig.tooltips,\n        icon = copyConfig.icon;\n    var tooltipNodes = toList(tooltips);\n    var iconNodes = toList(icon);\n    var copyTitle = copied ? getNode(tooltipNodes[1], textLocale.copied) : getNode(tooltipNodes[0], textLocale.copy);\n    var systemStr = copied ? textLocale.copied : textLocale.copy;\n    var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n\n  var renderOperations = function renderOperations(renderExpanded) {\n    return [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  };\n\n  var renderEllipsis = function renderEllipsis(needEllipsis) {\n    return [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  };\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      title: tooltipTitle,\n      enabledEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, _extends({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), mergedEnableEllipsis && rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      style: _extends(_extends({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : null,\n      \"aria-label\": topAriaLabel,\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      onEllipsis: onJsEllipsis\n    }, function (node, needEllipsis) {\n      var renderNode = node;\n\n      if (node.length && needEllipsis && topAriaLabel) {\n        renderNode = /*#__PURE__*/React.createElement(\"span\", {\n          key: \"show-content\",\n          \"aria-hidden\": true\n        }, renderNode);\n      }\n\n      var wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n      return wrappedContext;\n    })));\n  });\n});\nexport default Base;"],"names":["cuttable","node","type","sliceNodes","nodeList","len","currLen","currentNodeList","i","length","nextLen","String","restLen","push","slice","_ref","enabledMeasure","children","text","width","rows","onEllipsis","_React$useState","_React$useState2","cutLength","setCutLength","_React$useState3","_React$useState4","walkingState","setWalkingState","_cutLength","startLen","midLen","endLen","_React$useState5","_React$useState6","singleRowHeight","setSingleRowHeight","singleRowRef","midRowRef","toArray","totalLen","forEach","getNodesLen","mergedChildren","Math","ceil","_a","current","offsetHeight","_b","_midHeight","nextStartLen","nextEndLen","nextMidLen","ref","sliceNodeList","measureStyle","whiteSpace","margin","padding","renderMeasure","content","style","position","display","left","top","zIndex","visibility","pointerEvents","wordBreak","title","enabledEllipsis","isEllipsis","visible","undefined","getNode","dom","defaultNode","needDom","toList","val","Array","isArray","props","customizePrefixCls","prefixCls","className","disabled","ellipsis","editable","copyable","component","restProps","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","_React$useContext","getPrefixCls","direction","textLocale","typographyRef","editIconRef","textProps","omit","_useMergedConfig","useMergedConfig","_useMergedConfig2","enableEdit","editConfig","_useMergedState","useMergedState","value","editing","_useMergedState2","setEditing","_editConfig$triggerTy","triggerType","triggerEdit","edit","onStart","useUpdatedEffect","focus","onEditClick","preventDefault","_useMergedConfig3","_useMergedConfig4","enableCopy","copyConfig","copied","setCopied","copyIdRef","cleanCopyId","clearTimeout","onCopyClick","stopPropagation","setTimeout","onCopy","isLineClampSupport","setIsLineClampSupport","isTextOverflowSupport","setIsTextOverflowSupport","_React$useState7","_React$useState8","expanded","setExpanded","_React$useState9","_React$useState10","isJsEllipsis","setIsJsEllipsis","_React$useState11","_React$useState12","isNativeEllipsis","setIsNativeEllipsis","_useMergedConfig5","expandable","_useMergedConfig6","enableEllipsis","ellipsisConfig","mergedEnableEllipsis","_ellipsisConfig$rows","needMeasureEllipsis","suffix","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","_React$useState13","_React$useState14","ellipsisWidth","setEllipsisWidth","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","scrollHeight","offsetWidth","scrollWidth","tooltipTitle","tooltip","topAriaLabel","isValid","includes","Editable","onSave","onChange","onCancel","onEnd","maxLength","autoSize","enterIcon","renderEdit","icon","editTitle","ariaLabel","key","concat","onClick","EditOutlined","role","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","copy","systemStr","CheckOutlined","CopyOutlined","onResize","_ref2","resizeRef","_classNames","Typography","WebkitLineClamp","needEllipsis","renderNode","wrappedContext","mark","code","underline","del","strong","keyboard","italic","currentContent","wrap","needed","tag","wrapperDecorations","renderExpanded","symbol","expandContent","expand","renderEllipsis"],"sourceRoot":""}