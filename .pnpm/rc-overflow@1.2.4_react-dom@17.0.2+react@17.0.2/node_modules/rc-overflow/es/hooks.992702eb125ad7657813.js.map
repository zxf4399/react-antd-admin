{"version":3,"file":".pnpm/rc-overflow@1.2.4_react-dom@17.0.2+react@17.0.2/node_modules/rc-overflow/es/hooks.992702eb125ad7657813.js","mappings":"sMASO,SAASA,IACd,IAAIC,GAAY,OAAS,IAErBC,GADa,OAAeD,EAAW,GACd,GAEzBE,GAAY,IAAAC,QAAO,IACnBC,EAAe,EACfC,EAAgB,EAyBpB,OAvBA,SAAqBC,GACnB,IAAIC,EAAUH,EAmBd,OAlBAA,GAAgB,EAEZF,EAAUM,QAAQC,OAASF,EAAU,IACvCL,EAAUM,QAAQD,GAAWD,GAexB,CAXKJ,EAAUM,QAAQD,GAE9B,SAAkBG,GAChBR,EAAUM,QAAQD,GAA0B,mBAARG,EAAqBA,EAAIR,EAAUM,QAAQD,IAAYG,EAC3F,WAAWL,GAEXA,GAAgB,QAAI,WAClBJ,EAAY,IAAI","sources":["webpack://react-antd-admin/./node_modules/.pnpm/rc-overflow@1.2.4_react-dom@17.0.2+react@17.0.2/node_modules/rc-overflow/es/hooks/useBatchFrameState.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useRef } from 'react';\nimport raf from \"rc-util/es/raf\";\nimport useState from \"rc-util/es/hooks/useState\";\n/**\n * State generate. Return a `setState` but it will flush all state with one render to save perf.\n * This is not a realization of `unstable_batchedUpdates`.\n */\n\nexport function useBatchFrameState() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      forceUpdate = _useState2[1];\n\n  var statesRef = useRef([]);\n  var walkingIndex = 0;\n  var beforeFrameId = 0;\n\n  function createState(defaultValue) {\n    var myIndex = walkingIndex;\n    walkingIndex += 1; // Fill value if not exist yet\n\n    if (statesRef.current.length < myIndex + 1) {\n      statesRef.current[myIndex] = defaultValue;\n    } // Return filled as `setState`\n\n\n    var value = statesRef.current[myIndex];\n\n    function setValue(val) {\n      statesRef.current[myIndex] = typeof val === 'function' ? val(statesRef.current[myIndex]) : val;\n      raf.cancel(beforeFrameId); // Flush with batch\n\n      beforeFrameId = raf(function () {\n        forceUpdate({}, true);\n      });\n    }\n\n    return [value, setValue];\n  }\n\n  return createState;\n}"],"names":["useBatchFrameState","_useState","forceUpdate","statesRef","useRef","walkingIndex","beforeFrameId","defaultValue","myIndex","current","length","val"],"sourceRoot":""}