{"version":3,"file":".pnpm/mdast-util-definitions@5.1.0/node_modules/mdast-util-definitions.c9cf60c67f38777ab3d8.js","mappings":"4JAQA,MAAMA,EAAM,GAAGC,eAMR,SAASC,EAAYC,GAE1B,MAAMC,EAAQC,OAAOC,OAAO,MAE5B,IAAKH,IAASA,EAAKI,KACjB,MAAM,IAAIC,MAAM,wCAKlB,OAFA,QAAML,EAAM,cAKZ,SAAsBM,GACpB,MAAMC,EAAKC,EAAMF,EAAWG,YACxBF,IAAOV,EAAIa,KAAKT,EAAOM,KACzBN,EAAMM,GAAMD,MAUhB,SAAuBG,GACrB,MAAMF,EAAKC,EAAMC,GACjB,OAAOF,GAAMV,EAAIa,KAAKT,EAAOM,GAAMN,EAAMM,GAAM,MAQnD,SAASC,EAAMG,GACb,OAAOC,OAAOD,GAAS,IAAIE","sources":["webpack://tech-stack/./node_modules/.pnpm/mdast-util-definitions@5.1.0/node_modules/mdast-util-definitions/index.js"],"sourcesContent":["/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('unist-util-visit').Visitor<Definition>} DefinitionVisitor\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Object.<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', ondefinition)\n\n  return getDefinition\n\n  /** @type {DefinitionVisitor} */\n  function ondefinition(definition) {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  }\n\n  /**\n   * Get a node from the bound definition-cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function getDefinition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n"],"names":["own","hasOwnProperty","definitions","node","cache","Object","create","type","Error","definition","id","clean","identifier","call","value","String","toUpperCase"],"sourceRoot":""}