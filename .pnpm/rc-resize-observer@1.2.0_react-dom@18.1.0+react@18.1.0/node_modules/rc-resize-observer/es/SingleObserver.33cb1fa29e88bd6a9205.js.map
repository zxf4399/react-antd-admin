{"version":3,"file":".pnpm/rc-resize-observer@1.2.0_react-dom@18.1.0+react@18.1.0/node_modules/rc-resize-observer/es/SingleObserver.33cb1fa29e88bd6a9205.js","mappings":"0OASIA,EAA0B,SAAUC,IACtC,OAAUD,EAAYC,GAEtB,IAAIC,GAAS,OAAaF,GAE1B,SAASA,IAGP,OAFA,OAAgBG,KAAMH,GAEfE,EAAOE,MAAMD,KAAME,WAU5B,OAPA,OAAaL,EAAY,CAAC,CACxBM,IAAK,SACLC,MAAO,WACL,OAAOJ,KAAKK,MAAMC,aAIfT,EAlBqB,CAmB5B,a,UCrBa,SAASU,EAAeF,GACrC,IAAIC,EAAWD,EAAMC,SACjBE,EAAWH,EAAMG,SACjBC,EAAa,SAAa,MAC1BC,EAAa,SAAa,MAC1BC,EAAqB,aAAiBC,EAAA,GAEtCC,EAAoC,mBAAbP,EACvBQ,EAAiBD,EAAgBP,EAASG,GAAcH,EAExDS,EAAU,SAAa,CACzBC,OAAQ,EACRC,QAAS,EACTC,aAAc,EACdC,cAAe,IAGbC,GAAUP,GAA8B,iBAAqBC,KAAmB,QAAWA,GAC3FO,EAAYD,EAASN,EAAeQ,IAAM,KAC1CC,EAAY,WAAc,WAC5B,OAAO,QAAWF,EAAWZ,KAC5B,CAACY,EAAWZ,IAEXe,EAAW,SAAanB,GAC5BmB,EAASC,QAAUpB,EAEnB,IAAIqB,EAAmB,eAAkB,SAAUC,GACjD,IAAIC,EAAoBJ,EAASC,QAC7BI,EAAWD,EAAkBC,SAC7BC,EAAOF,EAAkBE,KAEzBC,EAAwBJ,EAAOK,wBAC/BhB,EAAQe,EAAsBf,MAC9BC,EAASc,EAAsBd,OAE/BC,EAAcS,EAAOT,YACrBC,EAAeQ,EAAOR,aAOtBc,EAAaC,KAAKC,MAAMnB,GACxBoB,EAAcF,KAAKC,MAAMlB,GAE7B,GAAIF,EAAQU,QAAQT,QAAUiB,GAAclB,EAAQU,QAAQR,SAAWmB,GAAerB,EAAQU,QAAQP,cAAgBA,GAAeH,EAAQU,QAAQN,eAAiBA,EAAc,CAClL,IAAIkB,EAAO,CACTrB,MAAOiB,EACPhB,OAAQmB,EACRlB,YAAaA,EACbC,aAAcA,GAEhBJ,EAAQU,QAAUY,EAElB,IAAIC,EAAoBpB,IAAgBgB,KAAKK,MAAMvB,GAASA,EAAQE,EAChEsB,EAAqBrB,IAAiBe,KAAKK,MAAMtB,GAAUA,EAASE,EAEpEsB,GAAW,QAAc,OAAc,GAAIJ,GAAO,GAAI,CACxDnB,YAAaoB,EACbnB,aAAcqB,IAIhB7B,MAAAA,GAAwEA,EAAmB8B,EAAUd,EAAQG,GAEzGD,GAEFa,QAAQC,UAAUC,MAAK,WACrBf,EAASY,EAAUd,SAIxB,IAcH,OAZA,aAAgB,WACd,IAAIkB,GAAiB,EAAAC,EAAA,GAAYrC,EAAWgB,WAAY,EAAAqB,EAAA,GAAYpC,EAAWe,SAM/E,OAJIoB,IAAmBrC,IACrB,QAAQqC,EAAgBnB,GAGnB,WACL,OAAO,QAAUmB,EAAgBnB,MAElC,CAACjB,EAAWgB,QAASjB,IAEJ,gBAAoBX,EAAY,CAClDyB,IAAKZ,GACJU,EAAsB,eAAmBN,EAAgB,CAC1DQ,IAAKC,IACFT","sources":["webpack://tech-stack/./node_modules/.pnpm/rc-resize-observer@1.2.0_react-dom@18.1.0+react@18.1.0/node_modules/rc-resize-observer/es/SingleObserver/DomWrapper.js","webpack://tech-stack/./node_modules/.pnpm/rc-resize-observer@1.2.0_react-dom@18.1.0+react@18.1.0/node_modules/rc-resize-observer/es/SingleObserver/index.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\n/**\n * Fallback to findDOMNode if origin ref do not provide any dom element\n */\n\nvar DomWrapper = /*#__PURE__*/function (_React$Component) {\n  _inherits(DomWrapper, _React$Component);\n\n  var _super = _createSuper(DomWrapper);\n\n  function DomWrapper() {\n    _classCallCheck(this, DomWrapper);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DomWrapper, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return DomWrapper;\n}(React.Component);\n\nexport { DomWrapper as default };","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport { observe, unobserve } from '../utils/observerUtil';\nimport DomWrapper from './DomWrapper';\nimport { CollectionContext } from '../Collection';\nexport default function SingleObserver(props) {\n  var children = props.children,\n      disabled = props.disabled;\n  var elementRef = React.useRef(null);\n  var wrapperRef = React.useRef(null);\n  var onCollectionResize = React.useContext(CollectionContext); // =========================== Children ===========================\n\n  var isRenderProps = typeof children === 'function';\n  var mergedChildren = isRenderProps ? children(elementRef) : children; // ============================= Size =============================\n\n  var sizeRef = React.useRef({\n    width: -1,\n    height: -1,\n    offsetWidth: -1,\n    offsetHeight: -1\n  }); // ============================= Ref ==============================\n\n  var canRef = !isRenderProps && /*#__PURE__*/React.isValidElement(mergedChildren) && supportRef(mergedChildren);\n  var originRef = canRef ? mergedChildren.ref : null;\n  var mergedRef = React.useMemo(function () {\n    return composeRef(originRef, elementRef);\n  }, [originRef, elementRef]); // =========================== Observe ============================\n\n  var propsRef = React.useRef(props);\n  propsRef.current = props; // Handler\n\n  var onInternalResize = React.useCallback(function (target) {\n    var _propsRef$current = propsRef.current,\n        onResize = _propsRef$current.onResize,\n        data = _propsRef$current.data;\n\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n\n    var offsetWidth = target.offsetWidth,\n        offsetHeight = target.offsetHeight;\n    /**\n     * Resize observer trigger when content size changed.\n     * In most case we just care about element size,\n     * let's use `boundary` instead of `contentRect` here to avoid shaking.\n     */\n\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n\n    if (sizeRef.current.width !== fixedWidth || sizeRef.current.height !== fixedHeight || sizeRef.current.offsetWidth !== offsetWidth || sizeRef.current.offsetHeight !== offsetHeight) {\n      var size = {\n        width: fixedWidth,\n        height: fixedHeight,\n        offsetWidth: offsetWidth,\n        offsetHeight: offsetHeight\n      };\n      sizeRef.current = size; // IE is strange, right?\n\n      var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n      var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight;\n\n      var sizeInfo = _objectSpread(_objectSpread({}, size), {}, {\n        offsetWidth: mergedOffsetWidth,\n        offsetHeight: mergedOffsetHeight\n      }); // Let collection know what happened\n\n\n      onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(sizeInfo, target, data);\n\n      if (onResize) {\n        // defer the callback but not defer to next frame\n        Promise.resolve().then(function () {\n          onResize(sizeInfo, target);\n        });\n      }\n    }\n  }, []); // Dynamic observe\n\n  React.useEffect(function () {\n    var currentElement = findDOMNode(elementRef.current) || findDOMNode(wrapperRef.current);\n\n    if (currentElement && !disabled) {\n      observe(currentElement, onInternalResize);\n    }\n\n    return function () {\n      return unobserve(currentElement, onInternalResize);\n    };\n  }, [elementRef.current, disabled]); // ============================ Render ============================\n\n  return /*#__PURE__*/React.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /*#__PURE__*/React.cloneElement(mergedChildren, {\n    ref: mergedRef\n  }) : mergedChildren);\n}"],"names":["DomWrapper","_React$Component","_super","this","apply","arguments","key","value","props","children","SingleObserver","disabled","elementRef","wrapperRef","onCollectionResize","Collection","isRenderProps","mergedChildren","sizeRef","width","height","offsetWidth","offsetHeight","canRef","originRef","ref","mergedRef","propsRef","current","onInternalResize","target","_propsRef$current","onResize","data","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","mergedOffsetWidth","round","mergedOffsetHeight","sizeInfo","Promise","resolve","then","currentElement","findDOMNode"],"sourceRoot":""}