{"version":3,"file":".pnpm/rc-menu@9.3.2_react-dom@18.0.0+react@18.0.0/node_modules/rc-menu/es/SubMenu.3af5f23265557613a410.js","mappings":"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","sources":["webpack://tech-stack/./node_modules/.pnpm/rc-menu@9.3.2_react-dom@18.0.0+react@18.0.0/node_modules/rc-menu/es/SubMenu/SubMenuList.js","webpack://tech-stack/./node_modules/.pnpm/rc-menu@9.3.2_react-dom@18.0.0+react@18.0.0/node_modules/rc-menu/es/SubMenu/PopupTrigger.js","webpack://tech-stack/./node_modules/.pnpm/rc-menu@9.3.2_react-dom@18.0.0+react@18.0.0/node_modules/rc-menu/es/SubMenu/InlineSubMenuList.js","webpack://tech-stack/./node_modules/.pnpm/rc-menu@9.3.2_react-dom@18.0.0+react@18.0.0/node_modules/rc-menu/es/SubMenu/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { MenuContext } from '../context/MenuContext';\n\nvar InternalSubMenuList = function InternalSubMenuList(_ref, ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(MenuContext),\n      prefixCls = _React$useContext.prefixCls,\n      mode = _React$useContext.mode,\n      rtl = _React$useContext.rtl;\n\n  return /*#__PURE__*/React.createElement(\"ul\", _extends({\n    className: classNames(prefixCls, rtl && \"\".concat(prefixCls, \"-rtl\"), \"\".concat(prefixCls, \"-sub\"), \"\".concat(prefixCls, \"-\").concat(mode === 'inline' ? 'inline' : 'vertical'), className)\n  }, restProps, {\n    \"data-menu-list\": true,\n    ref: ref\n  }), children);\n};\n\nvar SubMenuList = /*#__PURE__*/React.forwardRef(InternalSubMenuList);\nSubMenuList.displayName = 'SubMenuList';\nexport default SubMenuList;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport Trigger from 'rc-trigger';\nimport classNames from 'classnames';\nimport raf from \"rc-util/es/raf\";\nimport { MenuContext } from '../context/MenuContext';\nimport { placements, placementsRtl } from '../placements';\nimport { getMotion } from '../utils/motionUtil';\nvar popupPlacementMap = {\n  horizontal: 'bottomLeft',\n  vertical: 'rightTop',\n  'vertical-left': 'rightTop',\n  'vertical-right': 'leftTop'\n};\nexport default function PopupTrigger(_ref) {\n  var prefixCls = _ref.prefixCls,\n      visible = _ref.visible,\n      children = _ref.children,\n      popup = _ref.popup,\n      popupClassName = _ref.popupClassName,\n      popupOffset = _ref.popupOffset,\n      disabled = _ref.disabled,\n      mode = _ref.mode,\n      onVisibleChange = _ref.onVisibleChange;\n\n  var _React$useContext = React.useContext(MenuContext),\n      getPopupContainer = _React$useContext.getPopupContainer,\n      rtl = _React$useContext.rtl,\n      subMenuOpenDelay = _React$useContext.subMenuOpenDelay,\n      subMenuCloseDelay = _React$useContext.subMenuCloseDelay,\n      builtinPlacements = _React$useContext.builtinPlacements,\n      triggerSubMenuAction = _React$useContext.triggerSubMenuAction,\n      forceSubMenuRender = _React$useContext.forceSubMenuRender,\n      motion = _React$useContext.motion,\n      defaultMotions = _React$useContext.defaultMotions;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerVisible = _React$useState2[0],\n      setInnerVisible = _React$useState2[1];\n\n  var placement = rtl ? _objectSpread(_objectSpread({}, placementsRtl), builtinPlacements) : _objectSpread(_objectSpread({}, placements), builtinPlacements);\n  var popupPlacement = popupPlacementMap[mode];\n  var targetMotion = getMotion(mode, motion, defaultMotions);\n\n  var mergedMotion = _objectSpread(_objectSpread({}, targetMotion), {}, {\n    leavedClassName: \"\".concat(prefixCls, \"-hidden\"),\n    removeOnLeave: false,\n    motionAppear: true\n  }); // Delay to change visible\n\n\n  var visibleRef = React.useRef();\n  React.useEffect(function () {\n    visibleRef.current = raf(function () {\n      setInnerVisible(visible);\n    });\n    return function () {\n      raf.cancel(visibleRef.current);\n    };\n  }, [visible]);\n  return /*#__PURE__*/React.createElement(Trigger, {\n    prefixCls: prefixCls,\n    popupClassName: classNames(\"\".concat(prefixCls, \"-popup\"), _defineProperty({}, \"\".concat(prefixCls, \"-rtl\"), rtl), popupClassName),\n    stretch: mode === 'horizontal' ? 'minWidth' : null,\n    getPopupContainer: getPopupContainer,\n    builtinPlacements: placement,\n    popupPlacement: popupPlacement,\n    popupVisible: innerVisible,\n    popup: popup,\n    popupAlign: popupOffset && {\n      offset: popupOffset\n    },\n    action: disabled ? [] : [triggerSubMenuAction],\n    mouseEnterDelay: subMenuOpenDelay,\n    mouseLeaveDelay: subMenuCloseDelay,\n    onPopupVisibleChange: onVisibleChange,\n    forceRender: forceSubMenuRender,\n    popupMotion: mergedMotion\n  }, children);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport CSSMotion from 'rc-motion';\nimport { getMotion } from '../utils/motionUtil';\nimport MenuContextProvider, { MenuContext } from '../context/MenuContext';\nimport SubMenuList from './SubMenuList';\nexport default function InlineSubMenuList(_ref) {\n  var id = _ref.id,\n      open = _ref.open,\n      keyPath = _ref.keyPath,\n      children = _ref.children;\n  var fixedMode = 'inline';\n\n  var _React$useContext = React.useContext(MenuContext),\n      prefixCls = _React$useContext.prefixCls,\n      forceSubMenuRender = _React$useContext.forceSubMenuRender,\n      motion = _React$useContext.motion,\n      defaultMotions = _React$useContext.defaultMotions,\n      mode = _React$useContext.mode; // Always use latest mode check\n\n\n  var sameModeRef = React.useRef(false);\n  sameModeRef.current = mode === fixedMode; // We record `destroy` mark here since when mode change from `inline` to others.\n  // The inline list should remove when motion end.\n\n  var _React$useState = React.useState(!sameModeRef.current),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      destroy = _React$useState2[0],\n      setDestroy = _React$useState2[1];\n\n  var mergedOpen = sameModeRef.current ? open : false; // ================================= Effect =================================\n  // Reset destroy state when mode change back\n\n  React.useEffect(function () {\n    if (sameModeRef.current) {\n      setDestroy(false);\n    }\n  }, [mode]); // ================================= Render =================================\n\n  var mergedMotion = _objectSpread({}, getMotion(fixedMode, motion, defaultMotions)); // No need appear since nest inlineCollapse changed\n\n\n  if (keyPath.length > 1) {\n    mergedMotion.motionAppear = false;\n  } // Hide inline list when mode changed and motion end\n\n\n  var originOnVisibleChanged = mergedMotion.onVisibleChanged;\n\n  mergedMotion.onVisibleChanged = function (newVisible) {\n    if (!sameModeRef.current && !newVisible) {\n      setDestroy(true);\n    }\n\n    return originOnVisibleChanged === null || originOnVisibleChanged === void 0 ? void 0 : originOnVisibleChanged(newVisible);\n  };\n\n  if (destroy) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(MenuContextProvider, {\n    mode: fixedMode,\n    locked: !sameModeRef.current\n  }, /*#__PURE__*/React.createElement(CSSMotion, _extends({\n    visible: mergedOpen\n  }, mergedMotion, {\n    forceRender: forceSubMenuRender,\n    removeOnLeave: false,\n    leavedClassName: \"\".concat(prefixCls, \"-hidden\")\n  }), function (_ref2) {\n    var motionClassName = _ref2.className,\n        motionStyle = _ref2.style;\n    return /*#__PURE__*/React.createElement(SubMenuList, {\n      id: id,\n      className: motionClassName,\n      style: motionStyle\n    }, children);\n  }));\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"style\", \"className\", \"title\", \"eventKey\", \"warnKey\", \"disabled\", \"internalPopupClose\", \"children\", \"itemIcon\", \"expandIcon\", \"popupClassName\", \"popupOffset\", \"onClick\", \"onMouseEnter\", \"onMouseLeave\", \"onTitleClick\", \"onTitleMouseEnter\", \"onTitleMouseLeave\"],\n    _excluded2 = [\"active\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Overflow from 'rc-overflow';\nimport warning from \"rc-util/es/warning\";\nimport SubMenuList from './SubMenuList';\nimport { parseChildren } from '../utils/nodeUtil';\nimport MenuContextProvider, { MenuContext } from '../context/MenuContext';\nimport useMemoCallback from '../hooks/useMemoCallback';\nimport PopupTrigger from './PopupTrigger';\nimport Icon from '../Icon';\nimport useActive from '../hooks/useActive';\nimport { warnItemProp } from '../utils/warnUtil';\nimport useDirectionStyle from '../hooks/useDirectionStyle';\nimport InlineSubMenuList from './InlineSubMenuList';\nimport { PathTrackerContext, PathUserContext, useFullPath, useMeasure } from '../context/PathContext';\nimport { useMenuId } from '../context/IdContext';\nimport PrivateContext from '../context/PrivateContext';\n\nvar InternalSubMenu = function InternalSubMenu(props) {\n  var _classNames;\n\n  var style = props.style,\n      className = props.className,\n      title = props.title,\n      eventKey = props.eventKey,\n      warnKey = props.warnKey,\n      disabled = props.disabled,\n      internalPopupClose = props.internalPopupClose,\n      children = props.children,\n      itemIcon = props.itemIcon,\n      expandIcon = props.expandIcon,\n      popupClassName = props.popupClassName,\n      popupOffset = props.popupOffset,\n      onClick = props.onClick,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      onTitleClick = props.onTitleClick,\n      onTitleMouseEnter = props.onTitleMouseEnter,\n      onTitleMouseLeave = props.onTitleMouseLeave,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var domDataId = useMenuId(eventKey);\n\n  var _React$useContext = React.useContext(MenuContext),\n      prefixCls = _React$useContext.prefixCls,\n      mode = _React$useContext.mode,\n      openKeys = _React$useContext.openKeys,\n      contextDisabled = _React$useContext.disabled,\n      overflowDisabled = _React$useContext.overflowDisabled,\n      activeKey = _React$useContext.activeKey,\n      selectedKeys = _React$useContext.selectedKeys,\n      contextItemIcon = _React$useContext.itemIcon,\n      contextExpandIcon = _React$useContext.expandIcon,\n      onItemClick = _React$useContext.onItemClick,\n      onOpenChange = _React$useContext.onOpenChange,\n      onActive = _React$useContext.onActive;\n\n  var _React$useContext2 = React.useContext(PrivateContext),\n      _internalRenderSubMenuItem = _React$useContext2._internalRenderSubMenuItem;\n\n  var _React$useContext3 = React.useContext(PathUserContext),\n      isSubPathKey = _React$useContext3.isSubPathKey;\n\n  var connectedPath = useFullPath();\n  var subMenuPrefixCls = \"\".concat(prefixCls, \"-submenu\");\n  var mergedDisabled = contextDisabled || disabled;\n  var elementRef = React.useRef();\n  var popupRef = React.useRef(); // ================================ Warn ================================\n\n  if (process.env.NODE_ENV !== 'production' && warnKey) {\n    warning(false, 'SubMenu should not leave undefined `key`.');\n  } // ================================ Icon ================================\n\n\n  var mergedItemIcon = itemIcon || contextItemIcon;\n  var mergedExpandIcon = expandIcon || contextExpandIcon; // ================================ Open ================================\n\n  var originOpen = openKeys.includes(eventKey);\n  var open = !overflowDisabled && originOpen; // =============================== Select ===============================\n\n  var childrenSelected = isSubPathKey(selectedKeys, eventKey); // =============================== Active ===============================\n\n  var _useActive = useActive(eventKey, mergedDisabled, onTitleMouseEnter, onTitleMouseLeave),\n      active = _useActive.active,\n      activeProps = _objectWithoutProperties(_useActive, _excluded2); // Fallback of active check to avoid hover on menu title or disabled item\n\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      childrenActive = _React$useState2[0],\n      setChildrenActive = _React$useState2[1];\n\n  var triggerChildrenActive = function triggerChildrenActive(newActive) {\n    if (!mergedDisabled) {\n      setChildrenActive(newActive);\n    }\n  };\n\n  var onInternalMouseEnter = function onInternalMouseEnter(domEvent) {\n    triggerChildrenActive(true);\n    onMouseEnter === null || onMouseEnter === void 0 ? void 0 : onMouseEnter({\n      key: eventKey,\n      domEvent: domEvent\n    });\n  };\n\n  var onInternalMouseLeave = function onInternalMouseLeave(domEvent) {\n    triggerChildrenActive(false);\n    onMouseLeave === null || onMouseLeave === void 0 ? void 0 : onMouseLeave({\n      key: eventKey,\n      domEvent: domEvent\n    });\n  };\n\n  var mergedActive = React.useMemo(function () {\n    if (active) {\n      return active;\n    }\n\n    if (mode !== 'inline') {\n      return childrenActive || isSubPathKey([activeKey], eventKey);\n    }\n\n    return false;\n  }, [mode, active, activeKey, childrenActive, eventKey, isSubPathKey]); // ========================== DirectionStyle ==========================\n\n  var directionStyle = useDirectionStyle(connectedPath.length); // =============================== Events ===============================\n  // >>>> Title click\n\n  var onInternalTitleClick = function onInternalTitleClick(e) {\n    // Skip if disabled\n    if (mergedDisabled) {\n      return;\n    }\n\n    onTitleClick === null || onTitleClick === void 0 ? void 0 : onTitleClick({\n      key: eventKey,\n      domEvent: e\n    }); // Trigger open by click when mode is `inline`\n\n    if (mode === 'inline') {\n      onOpenChange(eventKey, !originOpen);\n    }\n  }; // >>>> Context for children click\n\n\n  var onMergedItemClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    onItemClick(info);\n  }); // >>>>> Visible change\n\n  var onPopupVisibleChange = function onPopupVisibleChange(newVisible) {\n    if (mode !== 'inline') {\n      onOpenChange(eventKey, newVisible);\n    }\n  };\n  /**\n   * Used for accessibility. Helper will focus element without key board.\n   * We should manually trigger an active\n   */\n\n\n  var onInternalFocus = function onInternalFocus() {\n    onActive(eventKey);\n  }; // =============================== Render ===============================\n\n\n  var popupId = domDataId && \"\".concat(domDataId, \"-popup\"); // >>>>> Title\n\n  var titleNode = /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"menuitem\",\n    style: directionStyle,\n    className: \"\".concat(subMenuPrefixCls, \"-title\"),\n    tabIndex: mergedDisabled ? null : -1,\n    ref: elementRef,\n    title: typeof title === 'string' ? title : null,\n    \"data-menu-id\": overflowDisabled && domDataId ? null : domDataId,\n    \"aria-expanded\": open,\n    \"aria-haspopup\": true,\n    \"aria-controls\": popupId,\n    \"aria-disabled\": mergedDisabled,\n    onClick: onInternalTitleClick,\n    onFocus: onInternalFocus\n  }, activeProps), title, /*#__PURE__*/React.createElement(Icon, {\n    icon: mode !== 'horizontal' ? mergedExpandIcon : null,\n    props: _objectSpread(_objectSpread({}, props), {}, {\n      isOpen: open,\n      // [Legacy] Not sure why need this mark\n      isSubMenu: true\n    })\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"\".concat(subMenuPrefixCls, \"-arrow\")\n  }))); // Cache mode if it change to `inline` which do not have popup motion\n\n  var triggerModeRef = React.useRef(mode);\n\n  if (mode !== 'inline') {\n    triggerModeRef.current = connectedPath.length > 1 ? 'vertical' : mode;\n  }\n\n  if (!overflowDisabled) {\n    var triggerMode = triggerModeRef.current; // Still wrap with Trigger here since we need avoid react re-mount dom node\n    // Which makes motion failed\n\n    titleNode = /*#__PURE__*/React.createElement(PopupTrigger, {\n      mode: triggerMode,\n      prefixCls: subMenuPrefixCls,\n      visible: !internalPopupClose && open && mode !== 'inline',\n      popupClassName: popupClassName,\n      popupOffset: popupOffset,\n      popup: /*#__PURE__*/React.createElement(MenuContextProvider // Special handle of horizontal mode\n      , {\n        mode: triggerMode === 'horizontal' ? 'vertical' : triggerMode\n      }, /*#__PURE__*/React.createElement(SubMenuList, {\n        id: popupId,\n        ref: popupRef\n      }, children)),\n      disabled: mergedDisabled,\n      onVisibleChange: onPopupVisibleChange\n    }, titleNode);\n  } // >>>>> List node\n\n\n  var listNode = /*#__PURE__*/React.createElement(Overflow.Item, _extends({\n    role: \"none\"\n  }, restProps, {\n    component: \"li\",\n    style: style,\n    className: classNames(subMenuPrefixCls, \"\".concat(subMenuPrefixCls, \"-\").concat(mode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(subMenuPrefixCls, \"-open\"), open), _defineProperty(_classNames, \"\".concat(subMenuPrefixCls, \"-active\"), mergedActive), _defineProperty(_classNames, \"\".concat(subMenuPrefixCls, \"-selected\"), childrenSelected), _defineProperty(_classNames, \"\".concat(subMenuPrefixCls, \"-disabled\"), mergedDisabled), _classNames)),\n    onMouseEnter: onInternalMouseEnter,\n    onMouseLeave: onInternalMouseLeave\n  }), titleNode, !overflowDisabled && /*#__PURE__*/React.createElement(InlineSubMenuList, {\n    id: popupId,\n    open: open,\n    keyPath: connectedPath\n  }, children));\n\n  if (_internalRenderSubMenuItem) {\n    listNode = _internalRenderSubMenuItem(listNode, props, {\n      selected: childrenSelected,\n      active: mergedActive,\n      open: open,\n      disabled: mergedDisabled\n    });\n  } // >>>>> Render\n\n\n  return /*#__PURE__*/React.createElement(MenuContextProvider, {\n    onItemClick: onMergedItemClick,\n    mode: mode === 'horizontal' ? 'vertical' : mode,\n    itemIcon: mergedItemIcon,\n    expandIcon: mergedExpandIcon\n  }, listNode);\n};\n\nexport default function SubMenu(props) {\n  var eventKey = props.eventKey,\n      children = props.children;\n  var connectedKeyPath = useFullPath(eventKey);\n  var childList = parseChildren(children, connectedKeyPath); // ==================== Record KeyPath ====================\n\n  var measure = useMeasure(); // eslint-disable-next-line consistent-return\n\n  React.useEffect(function () {\n    if (measure) {\n      measure.registerPath(eventKey, connectedKeyPath);\n      return function () {\n        measure.unregisterPath(eventKey, connectedKeyPath);\n      };\n    }\n  }, [connectedKeyPath]);\n  var renderNode; // ======================== Render ========================\n\n  if (measure) {\n    renderNode = childList;\n  } else {\n    renderNode = /*#__PURE__*/React.createElement(InternalSubMenu, props, childList);\n  }\n\n  return /*#__PURE__*/React.createElement(PathTrackerContext.Provider, {\n    value: connectedKeyPath\n  }, renderNode);\n}"],"names":["_excluded","InternalSubMenuList","_ref","ref","className","children","restProps","_React$useContext","MenuContext","prefixCls","mode","rtl","concat","SubMenuList","displayName","popupPlacementMap","horizontal","vertical","PopupTrigger","visible","popup","popupClassName","popupOffset","disabled","onVisibleChange","getPopupContainer","subMenuOpenDelay","subMenuCloseDelay","builtinPlacements","triggerSubMenuAction","forceSubMenuRender","motion","defaultMotions","_React$useState","_React$useState2","innerVisible","setInnerVisible","placement","placements","popupPlacement","targetMotion","g","mergedMotion","leavedClassName","removeOnLeave","motionAppear","visibleRef","current","raf","stretch","popupVisible","popupAlign","offset","action","mouseEnterDelay","mouseLeaveDelay","onPopupVisibleChange","forceRender","popupMotion","InlineSubMenuList","id","open","keyPath","fixedMode","sameModeRef","destroy","setDestroy","mergedOpen","length","originOnVisibleChanged","onVisibleChanged","newVisible","locked","_ref2","motionClassName","motionStyle","style","_excluded2","InternalSubMenu","props","_classNames","title","eventKey","warnKey","internalPopupClose","itemIcon","expandIcon","onClick","onMouseEnter","onMouseLeave","onTitleClick","onTitleMouseEnter","onTitleMouseLeave","domDataId","openKeys","contextDisabled","overflowDisabled","activeKey","selectedKeys","contextItemIcon","contextExpandIcon","onItemClick","onOpenChange","onActive","_internalRenderSubMenuItem","PrivateContext","isSubPathKey","connectedPath","subMenuPrefixCls","mergedDisabled","elementRef","popupRef","mergedItemIcon","mergedExpandIcon","originOpen","includes","childrenSelected","_useActive","useActive","active","activeProps","childrenActive","setChildrenActive","triggerChildrenActive","newActive","mergedActive","directionStyle","useDirectionStyle","onMergedItemClick","useMemoCallback","info","popupId","titleNode","role","tabIndex","e","key","domEvent","onFocus","Icon","icon","isOpen","isSubMenu","triggerModeRef","triggerMode","listNode","component","selected","SubMenu","renderNode","connectedKeyPath","childList","measure","registerPath","unregisterPath","value"],"sourceRoot":""}