{"version":3,"file":".pnpm/rc-dropdown@3.5.2_react-dom@18.1.0+react@18.1.0/node_modules/rc-dropdown/es/hooks.c01cf039681beb5a2fae.js","mappings":"qKAEIA,EAAM,QACNC,EAAM,QACK,SAASC,EAAiBC,GACvC,IAAIC,EAAUD,EAAKC,QACfC,EAAoBF,EAAKE,kBACzBC,EAAaH,EAAKG,WAClBC,EAAUJ,EAAKI,QACfC,EAAkBL,EAAKK,gBACvBC,EAAe,UAAa,GAE5BC,EAAgC,WAEhC,IAAIC,EAAqBC,EAAuBC,EAAwBC,EADtEV,GAAWE,EAAWS,UAGuB,QAA9CJ,EAAsBL,EAAWS,eAA6C,IAAxBJ,GAAuG,QAA5DC,EAAwBD,EAAoBL,kBAAkD,IAA1BM,GAAyG,QAA5DC,EAAyBD,EAAsBG,eAAgD,IAA3BF,GAAyG,QAA3DC,EAAyBD,EAAuBG,aAA8C,IAA3BF,GAA6CA,EAAuBG,KAAKJ,GACjdR,GAAkB,GAEa,mBAApBG,GACTA,GAAgB,KAKlBU,EAAgB,SAAuBC,GACzC,IAAIC,EAEJ,OAAQD,EAAME,SACZ,KAAKrB,EACHU,IACA,MAEF,KAAKT,GACEQ,EAAaM,UAAqD,QAAxCK,EAAmBb,EAAQQ,eAA0C,IAArBK,OAA8B,EAASA,EAAiBJ,QACrIG,EAAMG,iBACNf,EAAQQ,QAAQC,QAChBP,EAAaM,SAAU,GAEvBL,MAOR,aAAgB,WACd,OAAIN,GACFmB,OAAOC,iBAAiB,UAAWN,GAC5B,WACLK,OAAOE,oBAAoB,UAAWP,GACtCT,EAAaM,SAAU,IAIpB,WACL,OAAO,QAER,CAACX","sources":["webpack://tech-stack/./node_modules/.pnpm/rc-dropdown@3.5.2_react-dom@18.1.0+react@18.1.0/node_modules/rc-dropdown/es/hooks/useAccessibility.js"],"sourcesContent":["import * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar ESC = KeyCode.ESC,\n    TAB = KeyCode.TAB;\nexport default function useAccessibility(_ref) {\n  var visible = _ref.visible,\n      setTriggerVisible = _ref.setTriggerVisible,\n      triggerRef = _ref.triggerRef,\n      menuRef = _ref.menuRef,\n      onVisibleChange = _ref.onVisibleChange;\n  var focusMenuRef = React.useRef(false);\n\n  var handleCloseMenuAndReturnFocus = function handleCloseMenuAndReturnFocus() {\n    if (visible && triggerRef.current) {\n      var _triggerRef$current, _triggerRef$current$t, _triggerRef$current$t2, _triggerRef$current$t3;\n\n      (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$t = _triggerRef$current.triggerRef) === null || _triggerRef$current$t === void 0 ? void 0 : (_triggerRef$current$t2 = _triggerRef$current$t.current) === null || _triggerRef$current$t2 === void 0 ? void 0 : (_triggerRef$current$t3 = _triggerRef$current$t2.focus) === null || _triggerRef$current$t3 === void 0 ? void 0 : _triggerRef$current$t3.call(_triggerRef$current$t2);\n      setTriggerVisible(false);\n\n      if (typeof onVisibleChange === 'function') {\n        onVisibleChange(false);\n      }\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var _menuRef$current;\n\n    switch (event.keyCode) {\n      case ESC:\n        handleCloseMenuAndReturnFocus();\n        break;\n\n      case TAB:\n        if (!focusMenuRef.current && ((_menuRef$current = menuRef.current) === null || _menuRef$current === void 0 ? void 0 : _menuRef$current.focus)) {\n          event.preventDefault();\n          menuRef.current.focus();\n          focusMenuRef.current = true;\n        } else {\n          handleCloseMenuAndReturnFocus();\n        }\n\n        break;\n    }\n  };\n\n  React.useEffect(function () {\n    if (visible) {\n      window.addEventListener('keydown', handleKeyDown);\n      return function () {\n        window.removeEventListener('keydown', handleKeyDown);\n        focusMenuRef.current = false;\n      };\n    }\n\n    return function () {\n      return null;\n    };\n  }, [visible]); // eslint-disable-line react-hooks/exhaustive-deps\n}"],"names":["ESC","TAB","useAccessibility","_ref","visible","setTriggerVisible","triggerRef","menuRef","onVisibleChange","focusMenuRef","handleCloseMenuAndReturnFocus","_triggerRef$current","_triggerRef$current$t","_triggerRef$current$t2","_triggerRef$current$t3","current","focus","call","handleKeyDown","event","_menuRef$current","keyCode","preventDefault","window","addEventListener","removeEventListener"],"sourceRoot":""}