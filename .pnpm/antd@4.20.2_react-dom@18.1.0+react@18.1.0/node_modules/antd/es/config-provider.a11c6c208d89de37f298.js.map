{"version":3,"file":".pnpm/antd@4.20.2_react-dom@18.1.0+react@18.1.0/node_modules/antd/es/config-provider.a11c6c208d89de37f298.js","mappings":"iHACIA,E,QAA2B,mBAAoBC,GAUnD,O,oGCFWC,EAA6B,gBAAoB,CAE1DC,aAPwB,SAA6BC,EAAWC,GAChE,OAAIA,IACGD,EAAY,OAAOE,OAAOF,GAAa,QAM9CG,YCRgB,SAAqBC,GACrC,OAAoB,gBAAoBC,EAAgB,MAAM,SAAUC,GACtE,IACIC,GAASR,EADMO,EAAKP,cACE,SAE1B,OAAQK,GACN,IAAK,QACL,IAAK,OACH,OAAoB,gBAAoB,IAAO,CAC7CI,MAAO,6BAGX,IAAK,SACL,IAAK,aACL,IAAK,WACL,IAAK,WACL,IAAK,WACH,OAAoB,gBAAoB,IAAO,CAC7CA,MAAO,2BACPC,UAAW,GAAGP,OAAOK,EAAQ,YAGjC,QACE,OAAoB,gBAAoB,IAAO,aDb5CF,EAAiBP,EAAcY","sources":["webpack://tech-stack/./node_modules/.pnpm/antd@4.20.2_react-dom@18.1.0+react@18.1.0/node_modules/antd/es/config-provider/SizeContext.js","webpack://tech-stack/./node_modules/.pnpm/antd@4.20.2_react-dom@18.1.0+react@18.1.0/node_modules/antd/es/config-provider/context.js","webpack://tech-stack/./node_modules/.pnpm/antd@4.20.2_react-dom@18.1.0+react@18.1.0/node_modules/antd/es/config-provider/renderEmpty.js"],"sourcesContent":["import * as React from 'react';\nvar SizeContext = /*#__PURE__*/React.createContext(undefined);\nexport var SizeContextProvider = function SizeContextProvider(_ref) {\n  var children = _ref.children,\n      size = _ref.size;\n  return /*#__PURE__*/React.createElement(SizeContext.Consumer, null, function (originSize) {\n    return /*#__PURE__*/React.createElement(SizeContext.Provider, {\n      value: size || originSize\n    }, children);\n  });\n};\nexport default SizeContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport defaultRenderEmpty from './renderEmpty';\n\nvar defaultGetPrefixCls = function defaultGetPrefixCls(suffixCls, customizePrefixCls) {\n  if (customizePrefixCls) return customizePrefixCls;\n  return suffixCls ? \"ant-\".concat(suffixCls) : 'ant';\n};\n\nexport var ConfigContext = /*#__PURE__*/React.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: defaultGetPrefixCls,\n  renderEmpty: defaultRenderEmpty\n});\nexport var ConfigConsumer = ConfigContext.Consumer;\n/** @deprecated Use hooks instead. This is a legacy function */\n\nexport function withConfigConsumer(config) {\n  return function withConfigConsumerFunc(Component) {\n    // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods\n    var SFC = function SFC(props) {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (configProps) {\n        var basicPrefixCls = config.prefixCls;\n        var getPrefixCls = configProps.getPrefixCls;\n        var customizePrefixCls = props.prefixCls;\n        var prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);\n        return /*#__PURE__*/React.createElement(Component, _extends({}, configProps, props, {\n          prefixCls: prefixCls\n        }));\n      });\n    };\n\n    var cons = Component.constructor;\n    var name = cons && cons.displayName || Component.name || 'Component';\n    SFC.displayName = \"withConfigConsumer(\".concat(name, \")\");\n    return SFC;\n  };\n}","import * as React from 'react';\nimport Empty from '../empty';\nimport { ConfigConsumer } from '.';\n\nvar renderEmpty = function renderEmpty(componentName) {\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefix = getPrefixCls('empty');\n\n    switch (componentName) {\n      case 'Table':\n      case 'List':\n        return /*#__PURE__*/React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE\n        });\n\n      case 'Select':\n      case 'TreeSelect':\n      case 'Cascader':\n      case 'Transfer':\n      case 'Mentions':\n        return /*#__PURE__*/React.createElement(Empty, {\n          image: Empty.PRESENTED_IMAGE_SIMPLE,\n          className: \"\".concat(prefix, \"-small\")\n        });\n\n      default:\n        return /*#__PURE__*/React.createElement(Empty, null);\n    }\n  });\n};\n\nexport default renderEmpty;"],"names":["SizeContext","undefined","ConfigContext","getPrefixCls","suffixCls","customizePrefixCls","concat","renderEmpty","componentName","ConfigConsumer","_ref","prefix","image","className","Consumer"],"sourceRoot":""}