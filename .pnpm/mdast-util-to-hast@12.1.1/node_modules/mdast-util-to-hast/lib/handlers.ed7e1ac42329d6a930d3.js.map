{"version":3,"file":".pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers.ed7e1ac42329d6a930d3.js","mappings":"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","sources":["webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/footnote.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://tech-stack/./node_modules/.pnpm/mdast-util-to-hast@12.1.1/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js"],"sourcesContent":["/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(\n    node,\n    u('text', String(node.value).replace(/[ \\t]*(\\r?\\n|\\r)[ \\t]*/g, '$1'))\n  )\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n"],"names":["footnoteReference","h","node","id","String","identifier","safeId","toLowerCase","index","footnoteOrder","indexOf","counter","push","footnoteCounts","length","reuseCounter","position","href","clobberPrefix","dataFootnoteRef","ariaDescribedBy","u","listItemLoose","spread","children","handlers","blockquote","wrap","break","code","value","lang","match","props","className","meta","data","delete","emphasis","footnote","footnoteById","no","type","heading","depth","html","dangerous","augment","imageReference","def","definition","revert","src","url","alt","title","undefined","image","inlineCode","replace","linkReference","link","listItem","parent","result","loose","Boolean","listLoose","wrapped","checked","paragraph","tagName","unshift","disabled","child","tail","list","name","ordered","items","start","item","properties","Array","isArray","includes","root","strong","table","rows","align","row","out","cellIndex","cell","concat","end","slice","text","thematicBreak","toml","ignore","yaml","footnoteDefinition"],"sourceRoot":""}