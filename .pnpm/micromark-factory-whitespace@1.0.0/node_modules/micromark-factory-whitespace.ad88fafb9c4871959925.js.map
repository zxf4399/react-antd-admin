{"version":3,"file":".pnpm/micromark-factory-whitespace@1.0.0/node_modules/micromark-factory-whitespace.ad88fafb9c4871959925.js","mappings":"kLAWO,SAASA,EAAkBC,EAASC,GAEzC,IAAIC,EACJ,OAGA,SAASC,EAAMC,GACb,OAAI,QAAmBA,IACrBJ,EAAQK,MAAM,cACdL,EAAQM,QAAQF,GAChBJ,EAAQO,KAAK,cACbL,GAAO,EACAC,IAGL,QAAcC,IACT,IAAAI,GACLR,EACAG,EACAD,EAAO,aAAe,aAHjB,CAILE,GAGGH,EAAGG","sources":["webpack://react-antd-admin/./node_modules/.pnpm/micromark-factory-whitespace@1.0.0/node_modules/micromark-factory-whitespace/index.js"],"sourcesContent":["/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n"],"names":["factoryWhitespace","effects","ok","seen","start","code","enter","consume","exit","f"],"sourceRoot":""}