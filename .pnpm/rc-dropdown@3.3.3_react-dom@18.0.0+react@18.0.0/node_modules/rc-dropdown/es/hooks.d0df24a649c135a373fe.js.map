{"version":3,"file":".pnpm/rc-dropdown@3.3.3_react-dom@18.0.0+react@18.0.0/node_modules/rc-dropdown/es/hooks.d0df24a649c135a373fe.js","mappings":"iLAEIA,EAAM,QACNC,EAAM,QACK,SAASC,EAAiBC,GACvC,IAAIC,EAAUD,EAAKC,QACfC,EAAoBF,EAAKE,kBACzBC,EAAaH,EAAKG,WAClBC,EAAUJ,EAAKI,QACfC,EAAgBL,EAAKK,cACrBC,EAAkBN,EAAKM,gBAgBvBC,EAAgB,SAAuBC,GACzC,OAAQA,EAAMC,SACZ,KAAKZ,EAIL,KAAKC,EAnBHG,GAAWE,EAAWO,UACpBP,EAAWO,QAAQP,WAAWO,SAChCP,EAAWO,QAAQP,WAAWO,QAAQC,QAGxCT,GAAkB,GAEa,mBAApBI,GACTA,GAAgB,MAyDtB,OA5BA,aAAgB,WACd,OAAIL,GACFW,YAAW,YAdO,WACpB,GAAIR,EAAQM,QAAS,CACnB,IAAIG,EAAuBC,EAAuBC,EAE9CC,GAAoE,QAAvDH,EAAwBT,EAAQM,QAAQO,iBAAiD,IAA1BJ,OAAmC,EAASA,EAAsBK,SAASb,IAAkBD,EAAQM,QAA2F,QAAhFI,GAAyBC,EAAmBX,EAAQM,SAASS,qBAAqD,IAA1BL,OAAmC,EAASA,EAAsBM,KAAKL,EAAkBV,GAE7WW,GACFA,EAAgB,SAQhBK,GACAC,OAAOC,iBAAiB,UAAWhB,KAClC,KACI,WACLe,OAAOE,oBAAoB,UAAWjB,KAInC,WACL,OAAO,QAER,CAACN,IAcG,CACLwB,YAbgB,WACZxB,GAAWE,EAAWO,SACpBP,EAAWO,QAAQP,WAAWO,SAChCE,YAAW,WACT,IAAIc,EAAqBC,EAAuBC,EAED,QAA9CF,EAAsBvB,EAAWO,eAA6C,IAAxBgB,GAAuG,QAA5DC,EAAwBD,EAAoBvB,kBAAkD,IAA1BwB,GAAyG,QAA5DC,EAAyBD,EAAsBjB,eAAgD,IAA3BkB,GAA6CA,EAAuBjB,UAC1V","sources":["webpack://react-antd-admin/./node_modules/.pnpm/rc-dropdown@3.3.3_react-dom@18.0.0+react@18.0.0/node_modules/rc-dropdown/es/hooks/useAccessibility.js"],"sourcesContent":["import * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar ESC = KeyCode.ESC,\n    TAB = KeyCode.TAB;\nexport default function useAccessibility(_ref) {\n  var visible = _ref.visible,\n      setTriggerVisible = _ref.setTriggerVisible,\n      triggerRef = _ref.triggerRef,\n      menuRef = _ref.menuRef,\n      menuClassName = _ref.menuClassName,\n      onVisibleChange = _ref.onVisibleChange;\n\n  var handleCloseMenuAndReturnFocus = function handleCloseMenuAndReturnFocus() {\n    if (visible && triggerRef.current) {\n      if (triggerRef.current.triggerRef.current) {\n        triggerRef.current.triggerRef.current.focus();\n      }\n\n      setTriggerVisible(false);\n\n      if (typeof onVisibleChange === 'function') {\n        onVisibleChange(false);\n      }\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    switch (event.keyCode) {\n      case ESC:\n        handleCloseMenuAndReturnFocus();\n        break;\n\n      case TAB:\n        handleCloseMenuAndReturnFocus();\n        break;\n    }\n  };\n\n  var focusOpenedMenu = function focusOpenedMenu() {\n    if (menuRef.current) {\n      var _menuRef$current$clas, _menuRef$current$quer, _menuRef$current;\n\n      var menuList = ((_menuRef$current$clas = menuRef.current.className) === null || _menuRef$current$clas === void 0 ? void 0 : _menuRef$current$clas.includes(menuClassName)) ? menuRef.current : (_menuRef$current$quer = (_menuRef$current = menuRef.current).querySelector) === null || _menuRef$current$quer === void 0 ? void 0 : _menuRef$current$quer.call(_menuRef$current, menuClassName);\n\n      if (menuList) {\n        menuList['focus'](); // eslint-disable-line @typescript-eslint/dot-notation\n      }\n    }\n  };\n\n  React.useEffect(function () {\n    if (visible) {\n      setTimeout(function () {\n        focusOpenedMenu();\n        window.addEventListener('keydown', handleKeyDown);\n      }, 100);\n      return function () {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n\n    return function () {\n      return null;\n    };\n  }, [visible]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var returnFocus = function returnFocus() {\n    if (visible && triggerRef.current) {\n      if (triggerRef.current.triggerRef.current) {\n        setTimeout(function () {\n          var _triggerRef$current, _triggerRef$current$t, _triggerRef$current$t2;\n\n          (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$t = _triggerRef$current.triggerRef) === null || _triggerRef$current$t === void 0 ? void 0 : (_triggerRef$current$t2 = _triggerRef$current$t.current) === null || _triggerRef$current$t2 === void 0 ? void 0 : _triggerRef$current$t2.focus();\n        }, 100);\n      }\n    }\n  };\n\n  return {\n    returnFocus: returnFocus\n  };\n}"],"names":["ESC","TAB","useAccessibility","_ref","visible","setTriggerVisible","triggerRef","menuRef","menuClassName","onVisibleChange","handleKeyDown","event","keyCode","current","focus","setTimeout","_menuRef$current$clas","_menuRef$current$quer","_menuRef$current","menuList","className","includes","querySelector","call","focusOpenedMenu","window","addEventListener","removeEventListener","returnFocus","_triggerRef$current","_triggerRef$current$t","_triggerRef$current$t2"],"sourceRoot":""}